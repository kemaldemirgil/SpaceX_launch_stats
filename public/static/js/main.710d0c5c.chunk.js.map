{"version":3,"sources":["spaceX_logo.PNG","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710d0c5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spaceX_logo.a741d195.PNG\";","import React from 'react'\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>Mission: <span className={classNames({\r\n            'text-success': launch_success,\r\n            'text-danger': !launch_success\r\n          })}>{ mission_name }</span></h4>\r\n          <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MissionKey() {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <p>\r\n        <span className=\"px-3 mr-4 bg-success\" /> = Success\r\n      </p>\r\n      <p>\r\n        <span className=\"px-3 mr-4 bg-danger\" /> = Fail\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport LaunchItem from './LaunchItem'\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery{\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_date_local\r\n      launch_success\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nexport class Launches extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"display-4 my-3\">Launches</h1>\r\n        <MissionKey />\r\n        <Query query={LAUNCHES_QUERY}>\r\n          {\r\n            ({ loading, error, data }) => {\r\n              if(loading) return <h4>Loading...</h4>\r\n              if(error) console.log(error);\r\n              return <>\r\n              {\r\n                data.launches.map(launch => (\r\n                  <LaunchItem key={launch.mission_name} launch={launch} />\r\n                ))\r\n              }\r\n              </>\r\n            }\r\n          }\r\n        </Query>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Launches\r\n","import React, { Component, Fragment } from 'react'\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <Fragment>\r\n        <Query query={LAUNCH_QUERY} variables={{flight_number}}>\r\n          {\r\n            ({ loading, error, data }) => {\r\n              if(loading) return <h4>Loading...</h4>\r\n              if(error) console.log(error);\r\n              const { mission_name, flight_number, launch_year, launch_success, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch\r\n              return <div>\r\n                <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span> {mission_name}</h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Launch Successful: <span className={classNames({\r\n                      'text-success': launch_success,\r\n                      'text-danger': !launch_success\r\n                    })}>{launch_success ? 'Yes' : \"No\"}</span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Rocket ID: {rocket_id}\r\n                  </li>\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item mb-1\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr/>\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n              </div>\r\n            }\r\n          }\r\n\r\n        </Query>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Launch\r\n","import './App.css';\nimport logo from './spaceX_logo.PNG'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\n\n\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt=\"SpaceX\" style={{ width: 300, display: 'block', margin: 'auto' }}/>\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}